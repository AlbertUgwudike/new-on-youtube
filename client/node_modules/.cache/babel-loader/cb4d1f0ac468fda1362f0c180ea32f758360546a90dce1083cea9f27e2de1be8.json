{"ast":null,"code":"var _jsxFileName = \"/Users/albert/projects/new-on-youtube/client/src/HomePage/CategorySelector.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport testCategories from \"../test/test_categories.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategorySelector = props => {\n  _s();\n  const [categories, updateCategories] = useState([]);\n  useEffect(() => {\n    // fetch categories here with axios request\n    // TODO\n\n    updateCategories(testCategories);\n  }, []);\n  const updateSelection = c => {\n    if (props.selectedCategories.includes(c)) props.updateSelectedCategories(sc => {\n      return sc.filter(cat => cat != c);\n    });else props.updateSelectedCategories(sc => {\n      return sc.concat([c]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"500px\",\n      flexWrap: \"wrap\",\n      margin: \"auto\",\n      justifyContent: \"center\",\n      marginTop: \"20px\"\n    },\n    children: categories.map(c => /*#__PURE__*/_jsxDEV(CategoryButton, {\n      onClick: () => updateSelection(c),\n      selected: props.selectedCategories.includes(c),\n      children: c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(CategorySelector, \"CUG4luWERsr28Bm94O1NyX9SdDI=\");\n_c = CategorySelector;\nexport default CategorySelector;\nconst CategoryButton = styled.button`\n    margin: 10px;\n    font-size: 30px;\n    padding: 10px;\n    border-style: none;\n    background-color: ${props => props.selected ? \"#FAD000\" : \"grey\"};\n    border-radius: 5px;\n    &:hover {\n        transform: scale(1.1);\n        cursor: pointer;\n    }\n`;\n_c2 = CategoryButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"CategorySelector\");\n$RefreshReg$(_c2, \"CategoryButton\");","map":{"version":3,"names":["useEffect","useState","styled","testCategories","CategorySelector","props","categories","updateCategories","updateSelection","c","selectedCategories","includes","updateSelectedCategories","sc","filter","cat","concat","display","width","flexWrap","margin","justifyContent","marginTop","map","CategoryButton","button","selected"],"sources":["/Users/albert/projects/new-on-youtube/client/src/HomePage/CategorySelector.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport testCategories from \"../test/test_categories.json\";\n\ntype CategorySelectorProps = {\n    selectedCategories: string[];\n    updateSelectedCategories: Dispatch<SetStateAction<any[]>>;\n};\n\nconst CategorySelector = (props: CategorySelectorProps) => {\n    const [categories, updateCategories] = useState([] as string[]);\n\n    useEffect(() => {\n        // fetch categories here with axios request\n        // TODO\n\n        updateCategories(testCategories);\n    }, []);\n\n    const updateSelection = (c: string) => {\n        if (props.selectedCategories.includes(c))\n            props.updateSelectedCategories(sc => {\n                return sc.filter(cat => cat != c);\n            });\n        else\n            props.updateSelectedCategories(sc => {\n                return sc.concat([c]);\n            });\n    };\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                width: \"500px\",\n                flexWrap: \"wrap\",\n                margin: \"auto\",\n                justifyContent: \"center\",\n                marginTop: \"20px\",\n            }}>\n            {categories.map(c => (\n                <CategoryButton\n                    onClick={() => updateSelection(c)}\n                    selected={props.selectedCategories.includes(c)}>\n                    {c}\n                </CategoryButton>\n            ))}\n        </div>\n    );\n};\n\nexport default CategorySelector;\n\nconst CategoryButton = styled.button<{ selected: boolean }>`\n    margin: 10px;\n    font-size: 30px;\n    padding: 10px;\n    border-style: none;\n    background-color: ${props => (props.selected ? \"#FAD000\" : \"grey\")};\n    border-radius: 5px;\n    &:hover {\n        transform: scale(1.1);\n        cursor: pointer;\n    }\n`;\n"],"mappings":";;AAAA,SAAmCA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACrE,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,cAAc,MAAM,8BAA8B;AAAC;AAO1D,MAAMC,gBAAgB,GAAIC,KAA4B,IAAK;EAAA;EACvD,MAAM,CAACC,UAAU,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAa;EAE/DD,SAAS,CAAC,MAAM;IACZ;IACA;;IAEAO,gBAAgB,CAACJ,cAAc,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAIC,CAAS,IAAK;IACnC,IAAIJ,KAAK,CAACK,kBAAkB,CAACC,QAAQ,CAACF,CAAC,CAAC,EACpCJ,KAAK,CAACO,wBAAwB,CAACC,EAAE,IAAI;MACjC,OAAOA,EAAE,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,IAAIN,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC,KAEHJ,KAAK,CAACO,wBAAwB,CAACC,EAAE,IAAI;MACjC,OAAOA,EAAE,CAACG,MAAM,CAAC,CAACP,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;EACV,CAAC;EAED,oBACI;IACI,KAAK,EAAE;MACHQ,OAAO,EAAE,MAAM;MACfC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,MAAM;MAChBC,MAAM,EAAE,MAAM;MACdC,cAAc,EAAE,QAAQ;MACxBC,SAAS,EAAE;IACf,CAAE;IAAA,UACDhB,UAAU,CAACiB,GAAG,CAACd,CAAC,iBACb,QAAC,cAAc;MACX,OAAO,EAAE,MAAMD,eAAe,CAACC,CAAC,CAAE;MAClC,QAAQ,EAAEJ,KAAK,CAACK,kBAAkB,CAACC,QAAQ,CAACF,CAAC,CAAE;MAAA,UAC9CA;IAAC;MAAA;MAAA;MAAA;IAAA,QAET;EAAC;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAC,GAxCIL,gBAAgB;AAAA,KAAhBA,gBAAgB;AA0CtB,eAAeA,gBAAgB;AAE/B,MAAMoB,cAAc,GAAGtB,MAAM,CAACuB,MAA8B;AAC5D;AACA;AACA;AACA;AACA,wBAAwBpB,KAAK,IAAKA,KAAK,CAACqB,QAAQ,GAAG,SAAS,GAAG,MAAQ;AACvE;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAXIF,cAAc;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}