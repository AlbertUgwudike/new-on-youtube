{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/albert/projects/new-on-youtube/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _slicedToArray from\"/Users/albert/projects/new-on-youtube/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import{useState}from\"react\";import styled from\"styled-components\";import NavBar from\"../NavBar/Navbar\";import testSummaries from\"../test/test_summaries.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FeedPage=function FeedPage(){var modes=[\"Recent\",\"Popular\",\"Favourites\"];var _useState=useState(\"Recent\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],updateMode=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:\"#FAD000\"},children:/*#__PURE__*/_jsx(Title,{children:\"Your Feed\"})}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",width:\"max-content\",margin:\"auto\"},children:modes.map(function(m,i){return/*#__PURE__*/_jsxs(_Fragment,{children:[i!==0?/*#__PURE__*/_jsx(Title,{children:\"|\"}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(FeedSelector,{selected:mode===m,onClick:function onClick(){return updateMode(m);},children:m})]});})}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"60%\",margin:\"auto\"},children:testSummaries.map(function(r){return/*#__PURE__*/_jsxs(Result,{href:r.url,children:[/*#__PURE__*/_jsx(Img,{src:r.thumbnail}),/*#__PURE__*/_jsx(Description,{children:r.description})]});})})]});};export default FeedPage;var Title=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    font-size: 60px;\\n    font-weight: bold;\\n    margin: auto;\\n    padding: 50px 0;\\n    width: max-content;\\n\"])));var FeedSelector=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    font-size: 30px;\\n    font-weight: bold;\\n    font-family: \\\"Monaco\\\", \\\"Courier New\\\", monospace;\\n    text-decoration: \",\";\\n    margin: 20px;\\n    &:hover {\\n        color: #fad000;\\n        cursor: pointer;\\n    }\\n\"])),function(props){return props.selected?\"underline\":\"none\";});var Result=styled.a(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    display: flex;\\n    text-decoration: none;\\n    color: black;\\n    align-items: center;\\n    padding: 10px;\\n    background-color: #e1e1e1;\\n    border-radius: 10px;\\n    margin: 20px 0;\\n    &:hover {\\n        cursor: pointer;\\n        background-color: #fff1ac;\\n    }\\n\"])));var Img=styled.img(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    border-radius: 10px;\\n    width: 15%;\\n\"])));var Description=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    text-align: center;\\n    width: 85%;\\n    font-size: 25px;\\n\"])));","map":{"version":3,"names":["useState","styled","NavBar","testSummaries","FeedPage","modes","mode","updateMode","backgroundColor","display","alignItems","justifyContent","width","margin","map","m","i","r","url","thumbnail","description","Title","div","FeedSelector","props","selected","Result","a","Img","img","Description"],"sources":["/Users/albert/projects/new-on-youtube/client/src/FeedPage/FeedPage.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport NavBar from \"../NavBar/Navbar\";\nimport testSummaries from \"../test/test_summaries.json\";\n\nconst FeedPage = () => {\n    const modes = [\"Recent\", \"Popular\", \"Favourites\"] as [\"Recent\", \"Popular\", \"Favourites\"];\n    const [mode, updateMode] = useState(\"Recent\" as \"Recent\" | \"Popular\" | \"Favourites\");\n    return (\n        <div>\n            <NavBar />\n            <div style={{ backgroundColor: \"#FAD000\" }}>\n                <Title>Your Feed</Title>\n            </div>\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    width: \"max-content\",\n                    margin: \"auto\",\n                }}>\n                {modes.map((m, i) => (\n                    <>\n                        {i !== 0 ? <Title>|</Title> : <></>}\n                        <FeedSelector selected={mode === m} onClick={() => updateMode(m)}>\n                            {m}\n                        </FeedSelector>\n                    </>\n                ))}\n            </div>\n\n            <div style={{ width: \"60%\", margin: \"auto\" }}>\n                {testSummaries.map(r => (\n                    <Result href={r.url}>\n                        <Img src={r.thumbnail} />\n                        <Description>{r.description}</Description>\n                    </Result>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default FeedPage;\n\nconst Title = styled.div`\n    font-size: 60px;\n    font-weight: bold;\n    margin: auto;\n    padding: 50px 0;\n    width: max-content;\n`;\n\nconst FeedSelector = styled.div<{ selected: boolean }>`\n    font-size: 30px;\n    font-weight: bold;\n    font-family: \"Monaco\", \"Courier New\", monospace;\n    text-decoration: ${props => (props.selected ? \"underline\" : \"none\")};\n    margin: 20px;\n    &:hover {\n        color: #fad000;\n        cursor: pointer;\n    }\n`;\n\nconst Result = styled.a`\n    display: flex;\n    text-decoration: none;\n    color: black;\n    align-items: center;\n    padding: 10px;\n    background-color: #e1e1e1;\n    border-radius: 10px;\n    margin: 20px 0;\n    &:hover {\n        cursor: pointer;\n        background-color: #fff1ac;\n    }\n`;\n\nconst Img = styled.img`\n    border-radius: 10px;\n    width: 15%;\n`;\n\nconst Description = styled.div`\n    text-align: center;\n    width: 85%;\n    font-size: 25px;\n`;\n"],"mappings":"4WAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAOC,OAAM,KAAM,mBAAmB,CACtC,MAAOC,OAAM,KAAM,kBAAkB,CACrC,MAAOC,cAAa,KAAM,6BAA6B,CAAC,6IAExD,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACnB,GAAMC,MAAK,CAAG,CAAC,QAAQ,CAAE,SAAS,CAAE,YAAY,CAAwC,CACxF,cAA2BL,QAAQ,CAAC,QAAQ,CAAwC,wCAA7EM,IAAI,eAAEC,UAAU,eACvB,mBACI,oCACI,KAAC,MAAM,IAAG,cACV,YAAK,KAAK,CAAE,CAAEC,eAAe,CAAE,SAAU,CAAE,uBACvC,KAAC,KAAK,WAAC,WAAS,EAAQ,EACtB,cACN,YACI,KAAK,CAAE,CACHC,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBC,KAAK,CAAE,aAAa,CACpBC,MAAM,CAAE,MACZ,CAAE,UACDR,KAAK,CAACS,GAAG,CAAC,SAACC,CAAC,CAAEC,CAAC,qBACZ,2BACKA,CAAC,GAAK,CAAC,cAAG,KAAC,KAAK,WAAC,GAAC,EAAQ,cAAG,kBAAK,cACnC,KAAC,YAAY,EAAC,QAAQ,CAAEV,IAAI,GAAKS,CAAE,CAAC,OAAO,CAAE,yBAAMR,WAAU,CAACQ,CAAC,CAAC,EAAC,UAC5DA,CAAC,EACS,GAChB,EACN,CAAC,EACA,cAEN,YAAK,KAAK,CAAE,CAAEH,KAAK,CAAE,KAAK,CAAEC,MAAM,CAAE,MAAO,CAAE,UACxCV,aAAa,CAACW,GAAG,CAAC,SAAAG,CAAC,qBAChB,MAAC,MAAM,EAAC,IAAI,CAAEA,CAAC,CAACC,GAAI,wBAChB,KAAC,GAAG,EAAC,GAAG,CAAED,CAAC,CAACE,SAAU,EAAG,cACzB,KAAC,WAAW,WAAEF,CAAC,CAACG,WAAW,EAAe,GACrC,EACZ,CAAC,EACA,GACJ,CAEd,CAAC,CAED,cAAehB,SAAQ,CAEvB,GAAMiB,MAAK,CAAGpB,MAAM,CAACqB,GAAG,mLAMvB,CAED,GAAMC,aAAY,CAAGtB,MAAM,CAACqB,GAAG,oSAIR,SAAAE,KAAK,QAAKA,MAAK,CAACC,QAAQ,CAAG,WAAW,CAAG,MAAM,EAAC,CAMtE,CAED,GAAMC,OAAM,CAAGzB,MAAM,CAAC0B,CAAC,yVAatB,CAED,GAAMC,IAAG,CAAG3B,MAAM,CAAC4B,GAAG,gHAGrB,CAED,GAAMC,YAAW,CAAG7B,MAAM,CAACqB,GAAG,qIAI7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}